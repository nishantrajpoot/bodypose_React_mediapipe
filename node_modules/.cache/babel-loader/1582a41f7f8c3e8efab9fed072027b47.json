{"ast":null,"code":"var _jsxFileName = \"/home/nishant/Downloads/pose/mediapipe_face_mesh/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { FaceMesh } from \"@mediapipe/face_mesh\";\nimport React, { useRef, useEffect } from \"react\";\nimport * as Facemesh from \"@mediapipe/face_mesh\";\nimport * as cam from \"@mediapipe/camera_utils\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const connect = window.drawConnectors;\n  var camera = null;\n\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight; // Set canvas width\n\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n\n    if (results.multiFaceLandmarks) {\n      for (const landmarks of results.multiFaceLandmarks) {\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_TESSELATION, {\n          color: \"#C0C0C070\",\n          lineWidth: 1\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYE, {\n          color: \"#FF3030\"\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYEBROW, {\n          color: \"#FF3030\"\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYE, {\n          color: \"#30FF30\"\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYEBROW, {\n          color: \"#30FF30\"\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_FACE_OVAL, {\n          color: \"#E0E0E0\"\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_LIPS, {\n          color: \"#E0E0E0\"\n        });\n      }\n    }\n\n    canvasCtx.restore();\n  } // }\n  // setInterval(())\n\n\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\n      }\n    });\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMesh.onResults(onResults);\n\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null) {\n      camera = new cam.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await faceMesh.send({\n            image: webcamRef.current.video\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"output_canvas\",\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nishant/Downloads/pose/mediapipe_face_mesh/src/App.js"],"names":["FaceMesh","React","useRef","useEffect","Facemesh","cam","Webcam","App","webcamRef","canvasRef","connect","window","drawConnectors","camera","onResults","results","videoWidth","current","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","clearRect","drawImage","image","multiFaceLandmarks","landmarks","FACEMESH_TESSELATION","color","lineWidth","FACEMESH_RIGHT_EYE","FACEMESH_RIGHT_EYEBROW","FACEMESH_LEFT_EYE","FACEMESH_LEFT_EYEBROW","FACEMESH_FACE_OVAL","FACEMESH_LIPS","restore","faceMesh","locateFile","file","setOptions","maxNumFaces","minDetectionConfidence","minTrackingConfidence","Camera","onFrame","send","start","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import { FaceMesh } from \"@mediapipe/face_mesh\";\nimport React, { useRef, useEffect } from \"react\";\nimport * as Facemesh from \"@mediapipe/face_mesh\";\nimport * as cam from \"@mediapipe/camera_utils\";\nimport Webcam from \"react-webcam\";\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const connect = window.drawConnectors;\n  var camera = null;\n  function onResults(results) {\n    // const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n    if (results.multiFaceLandmarks) {\n      for (const landmarks of results.multiFaceLandmarks) {\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_TESSELATION, {\n          color: \"#C0C0C070\",\n          lineWidth: 1,\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYE, {\n          color: \"#FF3030\",\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_RIGHT_EYEBROW, {\n          color: \"#FF3030\",\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYE, {\n          color: \"#30FF30\",\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_LEFT_EYEBROW, {\n          color: \"#30FF30\",\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_FACE_OVAL, {\n          color: \"#E0E0E0\",\n        });\n        connect(canvasCtx, landmarks, Facemesh.FACEMESH_LIPS, {\n          color: \"#E0E0E0\",\n        });\n      }\n    }\n    canvasCtx.restore();\n  }\n  // }\n\n  // setInterval(())\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\n      },\n    });\n\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    faceMesh.onResults(onResults);\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null\n    ) {\n      camera = new cam.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await faceMesh.send({ image: webcamRef.current.video });\n        },\n        width: 640,\n        height: 480,\n      });\n      camera.start();\n    }\n  }, []);\n  return (\n    <center>\n      <div className=\"App\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />{\" \"}\n        <canvas\n          ref={canvasRef}\n          className=\"output_canvas\"\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n      </div>\n    </center>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}