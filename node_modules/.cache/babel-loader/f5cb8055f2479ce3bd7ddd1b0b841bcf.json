{"ast":null,"code":"var _jsxFileName = \"/home/nishant/Downloads/react+python/body/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as cam from \"@mediapipe/camera_utils\";\nimport Webcam from \"react-webcam\";\nimport { Pose } from \"@mediapipe/pose\";\nimport * as poseprop from \"@mediapipe/pose\"; // import LandmarkGrid from '@mediapipe/control_utils_3d';\n\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // const landmarkRef = useRef(null);   \n  // const connect = window.drawConnectors;\n\n  var camera = null;\n\n  function onResults(results) {\n    // const videoElement = webcamRef.current.video;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext('2d'); // const landmarkContainer = landmarkRef.current;  \n    // console.log('container: ',landmarkContainer)    \n    // const grid = new LandmarkGrid(landmarkContainer);\n    // if (!results.poseLandmarks) {\n    //   grid.updateLandmarks([]);\n    //   return;\n    // }\n\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.segmentationMask, 0, 0, canvasElement.width, canvasElement.height); // Only overwrite existing pixels.\n\n    canvasCtx.globalCompositeOperation = 'source-in'; // canvasCtx.fillStyle = '#00FF00';\n\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height); // Only overwrite missing pixels.\n\n    canvasCtx.globalCompositeOperation = 'destination-atop';\n    console.log('image:', results.image);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.globalCompositeOperation = 'source-over';\n    drawConnectors(canvasCtx, results.poseLandmarks, poseprop.POSE_CONNECTIONS, {\n      color: '#00FF00',\n      lineWidth: 4\n    }); //lime\n\n    drawLandmarks(canvasCtx, results.poseLandmarks, {\n      color: '#FF0000',\n      lineWidth: 2\n    }); //red\n\n    canvasCtx.restore(); // grid.updateLandmarks(results.poseWorldLandmarks);\n  } // }\n  // setInterval(())\n\n\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      }\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    pose.onResults(onResults);\n\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null) {\n      camera = new cam.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await pose.send({\n            image: webcamRef.current.video\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"output_canvas\",\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nishant/Downloads/react+python/body/src/App.js"],"names":["React","useRef","useEffect","cam","Webcam","Pose","poseprop","drawConnectors","drawLandmarks","App","webcamRef","canvasRef","camera","onResults","results","canvasElement","current","canvasCtx","getContext","save","clearRect","width","height","drawImage","segmentationMask","globalCompositeOperation","fillRect","console","log","image","poseLandmarks","POSE_CONNECTIONS","color","lineWidth","restore","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","Camera","video","onFrame","send","start","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as cam from \"@mediapipe/camera_utils\";\nimport Webcam from \"react-webcam\";\n\nimport {Pose} from \"@mediapipe/pose\";\nimport * as poseprop from \"@mediapipe/pose\";\n// import LandmarkGrid from '@mediapipe/control_utils_3d';\n\nimport {drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); \n  // const landmarkRef = useRef(null);   \n  // const connect = window.drawConnectors;\n  var camera = null;\n  \n  function onResults(results) {\n\n    // const videoElement = webcamRef.current.video;\n    const canvasElement = canvasRef.current;    \n    const canvasCtx = canvasElement.getContext('2d');\n    // const landmarkContainer = landmarkRef.current;  \n    // console.log('container: ',landmarkContainer)    \n    // const grid = new LandmarkGrid(landmarkContainer);\n        \n    // if (!results.poseLandmarks) {\n    //   grid.updateLandmarks([]);\n    //   return;\n    // }\n  \n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.segmentationMask, 0, 0,\n                        canvasElement.width, canvasElement.height);\n  \n    // Only overwrite existing pixels.\n    canvasCtx.globalCompositeOperation = 'source-in';\n    // canvasCtx.fillStyle = '#00FF00';\n    canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n  \n    // Only overwrite missing pixels.\n    canvasCtx.globalCompositeOperation = 'destination-atop';\n    console.log('image:',results.image);\n    \n    canvasCtx.drawImage(\n        results.image, 0, 0, canvasElement.width, canvasElement.height);\n  \n    canvasCtx.globalCompositeOperation = 'source-over';\n    drawConnectors(canvasCtx, results.poseLandmarks, poseprop.POSE_CONNECTIONS,\n                   {color: '#00FF00', lineWidth: 4});//lime\n    drawLandmarks(canvasCtx, results.poseLandmarks,\n                  {color: '#FF0000', lineWidth: 2});//red\n    canvasCtx.restore();\n  \n    // grid.updateLandmarks(results.poseWorldLandmarks);\n  }\n  // }\n\n  // setInterval(())\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      },\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n\n    pose.onResults(onResults);\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null\n    ) {\n      camera = new cam.Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await pose.send({ image: webcamRef.current.video });\n        },\n        width: 640,\n        height: 480,\n      });\n      camera.start();\n    }\n  }, []);\n  return (\n    <center>\n      <div className=\"App\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />{\" \"}\n        <canvas\n          ref={canvasRef}\n          className=\"output_canvas\"\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n\n        {/* <div\n          ref={landmarkRef}\n          className=\"landmark-grid-container\"          \n        ></div> */}\n\n\n      </div>\n    </center>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}